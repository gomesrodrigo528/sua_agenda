"""
Configura√ß√£o centralizada do Supabase
"""

from config import Config
from supabase import create_client, Client

# Configura√ß√£o do Supabase usando vari√°veis de ambiente
supabase_url = Config.SUPABASE_URL
supabase_key = Config.SUPABASE_KEY

if not supabase_key:
    raise ValueError("SUPABASE_KEY n√£o encontrada nas vari√°veis de ambiente")

# Criar cliente Supabase padr√£o
# O timeout ser√° gerenciado pela fun√ß√£o de retry
supabase: Client = create_client(supabase_url, supabase_key)

# Fun√ß√£o de retry para opera√ß√µes do Supabase
def supabase_with_retry(operation, max_retries=3, delay=1):
    """
    Executa uma opera√ß√£o do Supabase com retry autom√°tico
    """
    import time
    import random
    
    for attempt in range(max_retries):
        try:
            return operation()
        except Exception as e:
            if attempt == max_retries - 1:
                raise e
            
            # Backoff exponencial com jitter
            wait_time = delay * (2 ** attempt) + random.uniform(0, 1)
            print(f"‚ö†Ô∏è Erro na opera√ß√£o Supabase (tentativa {attempt + 1}/{max_retries}): {e}")
            print(f"üîÑ Tentando novamente em {wait_time:.2f} segundos...")
            time.sleep(wait_time)
    
    return None
